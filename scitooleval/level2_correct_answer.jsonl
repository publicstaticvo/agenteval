{"tool_path": ["SMILESToInChI", "InChIToInChIKey"], "Parameter": "CC(C)OC(=O)C1=CN=C(N=C1C2=CN(C3=CC=CC=C32)C)NC4=C(C=C(C(=C4)NC(=O)C=C)N(C)CCN(C)C)OC", "question": "What is the InChIKey for the molecule represented by the SMILES notation CC(C)OC(=O)C1=CN=C(N=C1C2=CN(C3=CC=CC=C32)C)NC4=C(C=C(C(=C4)NC(=O)C=C)N(C)CCN(C)C)OC?"}
{"tool_path": ["InChIKeyToSMILES", "SMILEStoSELFIES"], "Parameter": "FDMQDKQUTRLUBU-UHFFFAOYSA-N", "question": "Translate the InChIKey FDMQDKQUTRLUBU-UHFFFAOYSA-N into its corresponding SELFIES string by first resolving it against the ChemSpider database to obtain the SMILES string and then converting that SMILES string into a SELFIES string."}
{"tool_path": ["InChIKeyToSMILES", "GetMolFormula"], "Parameter": "AILRADAXUVEEIR-UHFFFAOYSA-N", "question": "What are the molecular formula of the InChIKey AILRADAXUVEEIR-UHFFFAOYSA-N?"}
{"tool_path": ["InChIToSMILES", "SMILEStoSELFIES"], "Parameter": "InChI=1S/C13H20/c1-11(2)10-13(3,4)12-8-6-5-7-9-12/h5-9,11H,10H2,1-4H3", "question": "Please convert the InChI string \"InChI=1S/C13H20/c1-11(2)10-13(3,4)12-8-6-5-7-9-12/h5-9,11H,10H2,1-4H3\" to its corresponding SELFIES string."}
{"tool_path": ["SELFIEStoSMILES", "GetMolFormula"], "Parameter": "[C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "What is the molecular formula of the molecule represented by the SELFIES string [C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1], after translating the SELFIES string into its corresponding SMILES string?"}
{"tool_path": ["ConvertingPeptide2SMILES", "SMILESToInChI"], "Parameter": "MPAFPGSTLDQMPFR", "question": "Convert the protein sequence MPAFPGSTLDQMPFR into its corresponding InChI by first converting the peptide sequence into SMILES format and then converting the resulting SMILES into InChI."}
{"tool_path": ["ConvertingPeptide2SMILES", "SMILEStoSELFIES"], "Parameter": "MSQLNGGRRNLQ", "question": "What is the SELFIES representation of the peptide sequence MSQLNGGRRNLQ?"}
{"tool_path": ["ConvertingPeptide2SMILES", "GetMolFormula"], "Parameter": "MTEITAAMVKEL", "question": "Convert peptide with the sequence MTEITAAMVKEL to molecular formula."}
{"tool_path": ["SlnToSmiles", "SMILESToInChI"], "Parameter": "CH3C(=O)OH", "question": "Convert the SLN string of the molecule represented by the SLN string CH3C(=O)OH to its corresponding InChI string."}
{"tool_path": ["SlnToSmiles", "SMILEStoSELFIES"], "Parameter": "C-C(=O)-O", "question": "Convert the SLN string `C-C(=O)-O` into its corresponding SELFIES string and SMILES string."}
{"tool_path": ["SlnToSmiles", "GetMolFormula"], "Parameter": "CH3C(=O)OH", "question": "Convert the SLN string to a SMILES string, then tell the molecular formula of the molecule represented by the SLN string CH3C(=O)OH."}
{"tool_path": ["GetMoleculeIdByFormula", "GetInchiByMoleculeId"], "Parameter": "C2F3N1S2", "question": "What is the InChI of the molecule that has the formula C2F3N1S2?"}
{"tool_path": ["SlnToSmiles", "CalculateEstateIndices"], "Parameter": "C[1]H:CH:CH:CH:CH:CH:@1", "question": "Determine the EState indices for each atom in the molecule represented by the SLN string C[1]H:CH:CH:CH:CH:CH:@1 by first converting the SLN string to a SMILES string and then calculating the EState indices using the SMILES representation."}
{"tool_path": ["SlnToSmiles", "FuncGroups"], "Parameter": "C[1]H:CH:CH:CH:CH:CH:@1", "question": "Identify and list all the functional groups present in the molecule represented by the SLN string C[1]H:CH:CH:CH:CH:CH:@1, after converting it to the SMILES format."}
{"tool_path": ["SlnToSmiles", "CalculatePBF"], "Parameter": "C-C(C)(C)-O", "question": "Calculate the PBF (plane of best fit) descriptor for the molecule represented by the SLN string C-C(C)(C)-O."}
{"tool_path": ["SlnToSmiles", "GetMolFrags"], "Parameter": "C-C(C)(C)-O", "question": "Identify the disconnected fragments within the molecule that is represented by the SLN string \"C-C(C)(C)-O\" by first converting it to the SMILES format and then analyzing the resultant SMILES string for fragments."}
{"tool_path": ["SlnToSmiles", "SMILESToCAS", "CheckExplosiveness"], "Parameter": "C-C(C)(C)-O", "question": "Is the substance represented by the SLN string C-C(C)(C)-O considered explosive?"}
{"tool_path": ["SlnToSmiles", "GetAtomStereoCentersNum"], "Parameter": "CH3CH2C(OH)CH3", "question": "How many atom stereocenters are present in the molecule represented by the SLN string CH3CH2C(OH)CH3 after converting it to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetNPR2"], "Parameter": "CH3CH2C(OH)CH3", "question": "Please calculate the NPR2 (Normalized Principal Moments Ratio) descriptor for the molecule represented by the SLN string CH3CH2C(OH)CH3."}
{"tool_path": ["SlnToSmiles", "GetTopologicalTorsionFingerprint"], "Parameter": "CH3CH2C(OH)CH3", "question": "Please generate the topological torsion fingerprint for the molecule represented by the SLN string CH3CH2C(OH)CH3 by first converting the SLN string to a SMILES string and then computing the topological torsion fingerprint for the resulting SMILES string."}
{"tool_path": ["SlnToSmiles", "CalculatePmi"], "Parameter": "CH3CH2C(OH)CH3", "question": "Determine the normalized principal moments of inertia (NPR1 and NPR2) for the molecule identified by the SLN string CH3CH2C(OH)CH3 by first converting the SLN string to its corresponding SMILES representation and then calculating the NPR1 and NPR2 values based on the SMILES representation."}
{"tool_path": ["SlnToSmiles", "GetHeteroatomsNum"], "Parameter": "C(Cl)(Br)(F)H", "question": "How many heteroatoms are there in the molecule represented by the SLN string C(Cl)(Br)(F)H, after converting it to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GenerateMolKeyFromSmiles"], "Parameter": "C(Cl)(Br)(F)H", "question": "What is the molecular key for the molecule that is represented by the SLN string C(Cl)(Br)(F)H, after converting it to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetKappa1"], "Parameter": "C(Cl)(Br)(F)H", "question": "Determine the Kappa1 value, which is a topological descriptor representing shape complexity or branching degree, for the molecule identified by the SLN string C(Cl)(Br)(F)H by first converting it to a SMILES string."}
{"tool_path": ["SlnToSmiles", "GetLabuteASA"], "Parameter": "C(Cl)(Br)(F)H", "question": "Determine the Labute accessible surface area (ASA) value for the molecule represented by the SLN string C(Cl)(Br)(F)H."}
{"tool_path": ["SlnToSmiles", "GetChi1v"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "What is the Chi^1v valence molecular graph index of the molecule represented by the SLN string N[1]CH=CHCH2CH=@1?"}
{"tool_path": ["SlnToSmiles", "SMILESToInChI"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Convert the SLN string N[1]CH=CHCH2CH=@1 to its corresponding InChI string using the appropriate chemical tools to first convert the SLN string to a SMILES string and then convert the SMILES string to the InChI string."}
{"tool_path": ["SlnToSmiles", "CreateShingling"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Create a shingling for the molecule with the SLN string N[1]CH=CHCH2CH=@1 by first converting this SLN string to a SMILES string and then generating the shingling for the resulting SMILES string."}
{"tool_path": ["SlnToSmiles", "GetEEMCharges"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Convert the SLN string N[1]CH=CHCH2CH=@1 to a SMILES string and then compute the EEM atomic partial charges for the molecule represented by the resulting SMILES string."}
{"tool_path": ["SlnToSmiles", "GetRotatableBondsNum"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "How many rotatable bonds are there in the molecule represented by the SLN string N[1]CH=CHCH2CH=@1?"}
{"tool_path": ["SlnToSmiles", "TypeAtomsInMolecule"], "Parameter": "C-C(=O)-O", "question": "Please identify the EState types of each atom in the molecule that is represented by the SLN string C-C(=O)-O."}
{"tool_path": ["SlnToSmiles", "GetEccentricity"], "Parameter": "C-C(=O)-O", "question": "What is the eccentricity of the molecule represented by the SLN string C-C(=O)-O?"}
{"tool_path": ["SlnToSmiles", "GetHybridization"], "Parameter": "C-C(=O)-O", "question": "Identify the hybridization of each atom in the molecule represented by the SLN string C-C(=O)-O after converting it to a SMILES string."}
{"tool_path": ["SlnToSmiles", "CalculateEstateVsa"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Determine the EState VSA (Valuation Surface Area) indices for the molecule identified by the SLN string N[1]CH=CHCH2CH=@1 by first converting it to its corresponding SMILES representation."}
{"tool_path": ["SlnToSmiles", "GetAliphaticRingsNum"], "Parameter": "C-C(C)(C)-O", "question": "How many aliphatic rings are present in the molecule represented by the SLN string C-C(C)(C)-O, after converting the SLN string to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "SMILESToInChI", "InChIToInChIKey"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Convert the SLN string N[1]CH=CHCH2CH=@1 to its corresponding InChIKey."}
{"tool_path": ["SlnToSmiles", "GetFormalCharge"], "Parameter": "CH3C(=O)OH", "question": "What is the formal charge of the molecule represented by the SLN string CH3C(=O)OH, when converted to its corresponding SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetBridgeheadAtomsNum"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Determine the number of bridgehead atoms in the molecule represented by the SLN string N[1]CH=CHCH2CH=@1 by first converting the SLN string to a SMILES string and then calculating the number of bridgehead atoms in the resulting SMILES string."}
{"tool_path": ["ConvertingPeptide2SMILES", "GetHeavyAtomsNum"], "Parameter": "MPAFPGSTLDQMPFR", "question": "How many heavy atoms are present in the molecule with the peptide sequence labeled as MPAFPGSTLDQMPFR after converting the sequence into SMILES format?"}
{"tool_path": ["ConvertingPeptide2SMILES", "CheckValidRingCut"], "Parameter": "MKQLQAKTGRQR", "question": "Generate the SMILES representation of the peptide sequence MKQLQAKTGRQR and determine if the molecule represented by this SMILES string forms a valid ring cut."}
{"tool_path": ["SMILESToCAS", "CheckExplosiveness"], "Parameter": "C1CC1C(=O)NC2=CC=CC(=C2)NC3=NC=NC(=C3)NC4=CC=CC(=C4)C(F)(F)F", "question": "Is the molecule with the SMILES notation C1CC1C(=O)NC2=CC=CC(=C2)NC3=NC=NC(=C3)NC4=CC=CC(=C4)C(F)(F)F explosive according to its CAS number?"}
{"tool_path": ["SMILESToInChI", "InChIToCSID"], "Parameter": "CC(C)CC(C)(C)C1=CC=CC=C1", "question": "Convert the SMILES string CC(C)CC(C)(C)C1=CC=CC=C1 to ChemSpider ID."}
{"tool_path": ["SMILESToCAS", "SafetySummary"], "Parameter": "C1=CC=C(C=C1)C=O", "question": "What are the safety details for the molecule with the SMILES notation C1=CC=C(C=C1)C=O, including its CAS number and relevant safety information?"}
{"tool_path": ["SMILEStoSELFIES", "LengthSELFIES"], "Parameter": "CC1=CC=C(C=C1)C2=CC=CC=C2", "question": "Translate the given SMILES string CC1=CC=C(C=C1)C2=CC=CC=C2 into its corresponding SELFIES string and then determine the number of symbols in that SELFIES string."}
{"tool_path": ["InChIKeyToSMILES", "BuildMorganFpFromSmiles"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "Generate a Morgan fingerprint for the molecule identified by the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "CanSerialize"], "Parameter": "LVXJQMNHJWSHET-AATRIKPKSA-N", "question": "Is it possible to serialize the molecule that corresponds to the InChIKey LVXJQMNHJWSHET-AATRIKPKSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetBCUT"], "Parameter": "GTTBEUCJPZQMDZ-UHFFFAOYSA-N", "question": "Please compute the 2D BCUT descriptors, including mass, Gasteiger charge, Crippen logP, and Crippen MR values, for the molecule with the given InChIKey GTTBEUCJPZQMDZ-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetAromaticRingsNum"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "How many aromatic rings are there in the molecule identified by the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "CalculateEstateIndices"], "Parameter": "RRMJMHOQSALEJJ-UHFFFAOYSA-N", "question": "Determine the EState indices for each atom in the molecule identified by the InChIKey RRMJMHOQSALEJJ-UHFFFAOYSA-N, and convert this InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "FuncGroups"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "Identify and list the functional groups in the molecule with the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N by first converting the InChIKey to its corresponding SMILES format and then analyzing the SMILES to determine the functional groups."}
{"tool_path": ["InChIKeyToSMILES", "SMILESToCAS", "CheckExplosiveness"], "Parameter": "SPSSULHKWOKEEL-UHFFFAOYSA-N", "question": "Is the molecule with the InChIKey SPSSULHKWOKEEL-UHFFFAOYSA-N explosive?"}
{"tool_path": ["InChIKeyToSMILES", "GetAtomStereoCentersNum"], "Parameter": "BQJCRHHNABKAKU-KBQPJGBKSA-N", "question": "Determine the number of atom stereocenters in the molecule given by the InChIKey BQJCRHHNABKAKU-KBQPJGBKSA-N by first converting the InChIKey to its corresponding SMILES representation and then calculating the number of atom stereocenters in that SMILES structure."}
{"tool_path": ["InChIKeyToSMILES", "GetChi1n"], "Parameter": "DUYJMQONPNNFPI-UHFFFAOYSA-N", "question": "Calculate the Chi^1 (Chi-one) cluster index, which represents a topological descriptor related to molecular branching, for the molecule identified by the InChIKey DUYJMQONPNNFPI-UHFFFAOYSA-N by first resolving the InChIKey against the ChemSpider database to obtain the SMILES notation."}
{"tool_path": ["InChIKeyToSMILES", "GetNPR2"], "Parameter": "BQJCRHHNABKAKU-KBQPJGBKSA-N", "question": "Please compute the NPR2 (Normalized Principal Moments Ratio) descriptor for the molecule identified by the InChIKey BQJCRHHNABKAKU-KBQPJGBKSA-N by first converting the InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "CalculatePmi"], "Parameter": "KRKNYBCHXYNGOX-UHFFFAOYSA-N", "question": "What are the normalized principal moments of inertia (NPR1 and NPR2) for the molecule identified by the InChIKey KRKNYBCHXYNGOX-UHFFFAOYSA-N, as obtained by resolving this InChIKey to its corresponding SMILES representation and then performing the calculation?"}
{"tool_path": ["InChIKeyToSMILES", "GetHeteroatomsNum"], "Parameter": "USNRYVNRPYXCSP-JUGPPOIOSA-N", "question": "How many heteroatoms are present in the molecule with the InChIKey USNRYVNRPYXCSP-JUGPPOIOSA-N according to the ChemSpider database, where the result is given in SMILES format?"}
{"tool_path": ["InChIKeyToSMILES", "GetRdkFingerprintFromSmiles"], "Parameter": "DFPAKSUCGFBDDF-UHFFFAOYSA-N", "question": "Please compute the RDKit fingerprint for the molecule identified by the InChIKey DFPAKSUCGFBDDF-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GenerateMolKeyFromSmiles"], "Parameter": "DFPAKSUCGFBDDF-UHFFFAOYSA-N", "question": "Can you generate a molecular key for the compound that has the InChIKey DFPAKSUCGFBDDF-UHFFFAOYSA-N by first resolving it to a SMILES string and then generating the molecular key from the obtained SMILES?"}
{"tool_path": ["InChIKeyToSMILES", "AssignPattyTypes"], "Parameter": "KRKNYBCHXYNGOX-UHFFFAOYSA-N", "question": "Please identify the Patty types for each atom in the molecule that corresponds to the InChIKey KRKNYBCHXYNGOX-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetKappa1"], "Parameter": "CVHZOJJKTDOEJC-UHFFFAOYSA-N", "question": "What is the Kappa1 value of the molecule identified by the InChIKey CVHZOJJKTDOEJC-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetLabuteASA"], "Parameter": "AILRADAXUVEEIR-UHFFFAOYSA-N", "question": "Please calculate the Labute accessible surface area (ASA) value for the molecule that has the InChIKey AILRADAXUVEEIR-UHFFFAOYSA-N by first converting the InChIKey to its corresponding SMILES notation."}
{"tool_path": ["InChIKeyToSMILES", "BuildAvalonFpFromSmiles"], "Parameter": "LVXJQMNHJWSHET-AATRIKPKSA-N", "question": "Generate the Avalon fingerprint for the chemical structure represented by the InChIKey LVXJQMNHJWSHET-AATRIKPKSA-N by first converting the InChIKey to a SMILES string and then generating the Avalon fingerprint from that SMILES string."}
{"tool_path": ["InChIKeyToSMILES", "GetChi1v"], "Parameter": "DFPAKSUCGFBDDF-UHFFFAOYSA-N", "question": "Compute the Chi^1v valence molecular graph index for the molecule identified by the InChIKey DFPAKSUCGFBDDF-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "CreateShingling"], "Parameter": "KRKNYBCHXYNGOX-UHFFFAOYSA-N", "question": "Generate the shingling for the molecule that has the InChIKey KRKNYBCHXYNGOX-UHFFFAOYSA-N, by first resolving the InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "GetEEMCharges"], "Parameter": "CVHZOJJKTDOEJC-UHFFFAOYSA-N", "question": "Calculate the Electronegativity Equalization Method (EEM) atomic partial charges for the molecule identified by the InChIKey CVHZOJJKTDOEJC-UHFFFAOYSA-N by first resolving the InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "GetRotatableBondsNum"], "Parameter": "LVXJQMNHJWSHET-AATRIKPKSA-N", "question": "How many rotatable bonds are present in the molecule identified by the InChIKey LVXJQMNHJWSHET-AATRIKPKSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "TypeAtomsInMolecule"], "Parameter": "OVSQVDMCBVZWGM-QSOFNFLRSA-N", "question": "Please identify the EState types of each atom in the molecule that corresponds to the InChIKey OVSQVDMCBVZWGM-QSOFNFLRSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetEccentricity"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "What is the eccentricity value of the molecule identified by the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "CalculateEstateVsa"], "Parameter": "SNICXCGAKADSCV-JTQLQIEISA-N", "question": "Compute the EState VSA (Valuation Surface Area) indices for the molecule identified by the InChIKey SNICXCGAKADSCV-JTQLQIEISA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetAromaticCarbocyclesNum"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "How many aromatic carbocycles are present in the molecule with the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N according to its corresponding SMILES representation?"}
{"tool_path": ["InChIKeyToSMILES", "GetHallKierAlpha"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "Please compute the Hall-Kier alpha index for the molecule identified by the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N by first resolving the InChIKey to obtain the corresponding SMILES notation."}
{"tool_path": ["InChIKeyToSMILES", "GetUnspecifiedAtomStereoCentersNum"], "Parameter": "FDMQDKQUTRLUBU-UHFFFAOYSA-N", "question": "What is the number of unspecified atomic stereocenters in the molecule with the given InChIKey FDMQDKQUTRLUBU-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetFrtool_pathCSP3"], "Parameter": "OVSQVDMCBVZWGM-QSOFNFLRSA-N", "question": "Determine the frtool_path of carbon atoms that are sp3-hybridized in the molecule identified by the InChIKey OVSQVDMCBVZWGM-QSOFNFLRSA-N."}
{"tool_path": ["InChIKeyToSMILES", "EncodeSECFP"], "Parameter": "PWKSKIMOESPYIA-BYPYZUCNSA-N", "question": "Generate the SECFP vector for the molecule with the InChIKey PWKSKIMOESPYIA-BYPYZUCNSA-N by first resolving the InChIKey to obtain its corresponding SMILES representation and then encoding the SECFP vector from the obtained SMILES."}
{"tool_path": ["InChIKeyToSMILES", "GenerateFraggleFragments"], "Parameter": "FDMQDKQUTRLUBU-UHFFFAOYSA-N", "question": "List all possible Fraggle fragmentations for the molecule identified by the InChIKey FDMQDKQUTRLUBU-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetInertialShapeFactor"], "Parameter": "DUYJMQONPNNFPI-UHFFFAOYSA-N", "question": "Calculate the Inertial Shape Factor of the molecule identified by the InChIKey DUYJMQONPNNFPI-UHFFFAOYSA-N by first converting the InChIKey to SMILES using the ChemSpider database."}
{"tool_path": ["InChIKeyToSMILES", "BuildAtomPairFpFromSmiles"], "Parameter": "DFPAKSUCGFBDDF-UHFFFAOYSA-N", "question": "Can you determine the Atom Pair Fingerprint for the molecule identified by the InChIKey DFPAKSUCGFBDDF-UHFFFAOYSA-N by first converting it to a SMILES string and then generating the Atom Pair Fingerprint from that SMILES string?"}
{"tool_path": ["InChIKeyToSMILES", "GetMORSE"], "Parameter": "GTTBEUCJPZQMDZ-UHFFFAOYSA-N", "question": "Calculate the Molecule Representation of Structures based on Electron diffrtool_path (MORSE) descriptors for the molecule identified by the InChIKey GTTBEUCJPZQMDZ-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetAromaticHeterocyclesNum"], "Parameter": "AILRADAXUVEEIR-UHFFFAOYSA-N", "question": "How many aromatic heterocycles are there in the molecule identified by the InChIKey AILRADAXUVEEIR-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetAliphaticCarbocyclesNum"], "Parameter": "DUYJMQONPNNFPI-UHFFFAOYSA-N", "question": "How many aliphatic carbocycles are present in the molecule identified by the InChIKey DUYJMQONPNNFPI-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetCrippenDescriptors"], "Parameter": "OVSQVDMCBVZWGM-QSOFNFLRSA-N", "question": "Determine the Wildman-Crippen logP value and molecular refractivity (MR) for the molecule identified by the InChIKey OVSQVDMCBVZWGM-QSOFNFLRSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetAliphaticHeterocyclesNum"], "Parameter": "GTTBEUCJPZQMDZ-UHFFFAOYSA-N", "question": "How many aliphatic heterocycles are present in the molecule corresponding to the InChIKey GTTBEUCJPZQMDZ-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetAutocorrelation3D"], "Parameter": "RRMJMHOQSALEJJ-UHFFFAOYSA-N", "question": "Compute the 3D autocorrelation descriptors for the molecule identified by the InChIKey RRMJMHOQSALEJJ-UHFFFAOYSA-N by first converting the InChIKey to SMILES format."}
{"tool_path": ["InChIKeyToSMILES", "TestMolecule"], "Parameter": "KRKNYBCHXYNGOX-UHFFFAOYSA-N", "question": "Can you verify if the molecule with the InChIKey KRKNYBCHXYNGOX-UHFFFAOYSA-N passes the canonicalization check by first resolving the InChIKey against the ChemSpider database to obtain the SMILES representation and then performing the canonicalization check on the resulting SMILES?"}
{"tool_path": ["InChIKeyToSMILES", "GetChi1n"], "Parameter": "AILRADAXUVEEIR-UHFFFAOYSA-N", "question": "What is the chi^1 (chi-one) cluster index for the molecule that has the InChIKey AILRADAXUVEEIR-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetAtomsNum"], "Parameter": "XUJNEKJLAYXESH-UHFFFAOYSA-N", "question": "Determine the number of atoms present in the molecule identified by the InChIKey XUJNEKJLAYXESH-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetChi0n"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "Determine the chi-zero cluster index for the molecule with the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N by first converting the InChIKey to its corresponding SMILES notation and then calculating the chi-zero cluster index."}
{"tool_path": ["InChIKeyToSMILES", "GetNPR1"], "Parameter": "RRMJMHOQSALEJJ-UHFFFAOYSA-N", "question": "Please determine the NPR1 (Normalized Principal Moments Ratio) descriptor for the molecule identified by the InChIKey RRMJMHOQSALEJJ-UHFFFAOYSA-N using the ChemSpider database to obtain its corresponding SMILES representation first."}
{"tool_path": ["InChIKeyToSMILES", "InChIKeyToSMILES", "SmallMoleculeSimilarityCalculation"], "question": "What is the molecular similarity between the compound represented by the InChIKey 'RRMJMHOQSALEJJ-UHFFFAOYSA-N' and the compound represented by the SMILES 'DUYJMQONPNNFPI-UHFFFAOYSA-N', where the InChIKey needs to be resolved into SMILES via the ChemSpider database?"}
{"tool_path": ["InChIKeyToSMILES", "InChIKeyToSMILES", "GetKappa2"], "Parameter": "XUJNEKJLAYXESH-UHFFFAOYSA-N", "question": "Determine the Kappa2 value for the molecule that is identified by the InChIKey XUJNEKJLAYXESH-UHFFFAOYSA-N, where the InChIKey should first be resolved into its corresponding SMILES notation."}
{"tool_path": ["InChIKeyToSMILES", "GetHBDNum"], "Parameter": "CVHZOJJKTDOEJC-UHFFFAOYSA-N", "question": "How many hydrogen bond donors (HBD) are there in the molecule identified by the InChIKey CVHZOJJKTDOEJC-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetAmideBondsNum"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "Determine the number of amide bonds in the molecule identified by the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetLipinskiHBDNum"], "Parameter": "OVSQVDMCBVZWGM-QSOFNFLRSA-N", "question": "Determine the number of Lipinski hydrogen bond donors (HBD) in the molecule identified by the InChIKey OVSQVDMCBVZWGM-QSOFNFLRSA-N, using the ChemSpider database to convert the InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "ProcessFingerprintMol"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "Please generate the binary molecular fingerprints for the compound identified by the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetChi1v"], "Parameter": "XUJNEKJLAYXESH-UHFFFAOYSA-N", "question": "What is the Chi^1v valence molecular graph index for the molecule identified by the InChIKey XUJNEKJLAYXESH-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "SMILESToCAS"], "Parameter": "BQJCRHHNABKAKU-KBQPJGBKSA-N", "question": "What is the CAS number for the compound with the InChIKey BQJCRHHNABKAKU-KBQPJGBKSA-N, by first converting the InChIKey to its corresponding SMILES format and then converting that SMILES format to the CAS number?"}
{"tool_path": ["InChIKeyToSMILES", "GetHBANum"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "Determine the number of hydrogen bond acceptors (HBA) in the molecule identified by the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N by first converting the InChIKey to its corresponding SMILES representation and then calculating the number of hydrogen bond acceptors from the SMILES."}
{"tool_path": ["InChIKeyToSMILES", "SMILESToCAS", "SafetySummary"], "Parameter": "KRKNYBCHXYNGOX-UHFFFAOYSA-N", "question": "Could you provide the safety summary for the molecule identified by the InChIKey KRKNYBCHXYNGOX-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetKappa1"], "Parameter": "SHGAZHPCJJPHSC-XFYACQKRSA-N", "question": "Determine the Kappa1 value of the molecule that corresponds to the InChIKey SHGAZHPCJJPHSC-XFYACQKRSA-N."}
{"tool_path": ["InChIKeyToSMILES", "GetChi1n"], "Parameter": "CIWBSHSKHKDKBQ-JLAZNSOCSA-N", "question": "What is the Chi^1 cluster index for the molecule with the InChIKey CIWBSHSKHKDKBQ-JLAZNSOCSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetLipinskiHBANum"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "How many Lipinski hydrogen bond acceptors are present in the molecule with the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N according to the ChemSpider database?"}
{"tool_path": ["InChIKeyToSMILES", "GetAsphericity"], "Parameter": "GTTBEUCJPZQMDZ-UHFFFAOYSA-N", "question": "Compute the asphericity descriptor for the molecule with the InChIKey GTTBEUCJPZQMDZ-UHFFFAOYSA-N by first converting the given InChIKey to its corresponding SMILES notation and then calculating the asphericity based on that SMILES."}
{"tool_path": ["InChIKeyToSMILES", "GenerateEstateFingerprint"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "Please generate the EState fingerprint for the molecule that has the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N by first resolving the InChIKey to obtain its corresponding SMILES representation and then generating the EState fingerprint from the obtained nSMILES."}
{"tool_path": ["InChIKeyToSMILES", "GetSpiroAtomsNum"], "Parameter": "AILRADAXUVEEIR-UHFFFAOYSA-N", "question": "Convert the InChIKey AILRADAXUVEEIR-UHFFFAOYSA-N to its corresponding SMILES representation using the ChemSpider database, and then determine the total number of spiro atoms present in the molecule represented by that SMILES string."}
{"tool_path": ["InChIKeyToSMILES", "GetChi1v"], "Parameter": "USNRYVNRPYXCSP-JUGPPOIOSA-N", "question": "What is the Chi1v valence molecular graph index for the molecule identified by the InChIKey USNRYVNRPYXCSP-JUGPPOIOSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetHeavyAtomsNum"], "Parameter": "DFPAKSUCGFBDDF-UHFFFAOYSA-N", "question": "How many heavy atoms are there in the molecule identified by the InChIKey DFPAKSUCGFBDDF-UHFFFAOYSA-N, using the InChIKey to obtain the SMILES representation first?"}
{"tool_path": ["InChIKeyToSMILES", "CheckValidRingCut"], "Parameter": "XUJNEKJLAYXESH-UHFFFAOYSA-N", "question": "Is the molecule represented by the InChIKey XUJNEKJLAYXESH-UHFFFAOYSA-N a valid ring cut according to its corresponding SMILES representation?"}
{"tool_path": ["InChIKeyToSMILES", "GetChi1v"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "Determine the Chi^1v (Chi-one-v) valence molecular graph index for the molecule that has the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N by first converting the InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "GetChi1v"], "Parameter": "QFWXEYRQNKRQDH-UHFFFAOYSA-N", "question": "Calculate the Chi^1v valence molecular graph index for the molecule identified by the InChIKey QFWXEYRQNKRQDH-UHFFFAOYSA-N, using the ChemSpider database to convert the InChIKey to SMILES format first."}
{"tool_path": ["InChIKeyToSMILES", "GetStereoCodeFromSmiles"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "What is the stereo code for the molecule that corresponds to the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N?"}
{"tool_path": ["NameToSMILES", "CanSerialize"], "Parameter": "ribose", "question": "What is the serialized representation of the molecule with the molecule name ribose?"}
{"tool_path": ["NameToSMILES", "GetAromaticRingsNum"], "Parameter": "ribose", "question": "How many aromatic rings are there in the molecule with the molecule name ribose, by first converting its name to the corresponding SMILES format and then calculating the number of aromatic rings in that SMILES structure?"}
{"tool_path": ["NameToSMILES", "CalculatePBF"], "Parameter": "toluene", "question": "Compute the PBF (plane of best fit) descriptor for the molecule with the molecule name toluene."}
{"tool_path": ["NameToSMILES", "GetChi1n"], "Parameter": "phenol", "question": "What is the Chi^1 cluster index of the molecule with the molecule name phenol?"}
{"tool_path": ["NameToSMILES", "GetNPR2"], "Parameter": "salicylic acid", "question": "Please calculate the NPR2 (Normalized Principal Moments Ratio) descriptor for the molecule with the molecule name salicylic acid."}
{"tool_path": ["NameToSMILES", "GetHeteroatomsNum"], "Parameter": "benzene", "question": "How many heteroatoms are there in the molecule with the molecule name benzene?"}
{"tool_path": ["NameToSMILES", "SMILESToCAS", "CASToPrice"], "Parameter": "urea", "question": "What is the average price of the molecule with the name urea based on its CAS number?"}
{"tool_path": ["NameToSMILES", "GenerateMolKeyFromSmiles"], "Parameter": "ethanol", "question": "What is the molecular key for the molecule with the molecule name ethanol?"}
{"tool_path": ["NameToSMILES", "GetKappa1"], "Parameter": "morphine", "question": "What is the Kappa1 value for the molecule with the molecule name morphine?"}
{"tool_path": ["NameToSMILES", "CalculateSpherocityIndex"], "Parameter": "adrenaline", "question": "What is the sphericity index of the molecule with the molecule name adrenaline?"}
{"tool_path": ["NameToSMILES", "GetChi1v"], "Parameter": "histidine", "question": "Please compute the Chi^1v (Chi-one-v) valence molecular graph index for the molecule with the molecule name histidine by first converting its name to the corresponding SMILES format."}
{"tool_path": ["NameToSMILES", "CalculateRadiusOfGyration"], "Parameter": "caffeine", "question": "What is the radius of gyration for the molecule with the molecule name caffeine?"}
{"tool_path": ["NameToSMILES", "SMILESToInChI"], "Parameter": "cyanocobalamin", "question": "Please convert the molecule with the molecule name cyanocobalamin to its corresponding InChI string by first querying the corresponding SMILES format based on the molecule name and then converting the obtained SMILES string to its corresponding InChI string."}
{"tool_path": ["NameToSMILES", "CreateShingling"], "Parameter": "ribose", "question": "Convert the molecule with the molecule name ribose to its shingling representation by first obtaining its SMILES format."}
{"tool_path": ["NameToSMILES", "GetEEMCharges"], "Parameter": "lactose", "question": "Determine the EEM (Electronegativity Equalization Method) atomic partial charges for the molecule with the molecule name lactose by first converting the molecule name to its corresponding SMILES format."}
{"tool_path": ["NameToSMILES", "GetRotatableBondsNum"], "Parameter": "acetone", "question": "How many rotatable bonds are there in the molecule with the molecule name acetone?"}
{"tool_path": ["NameToSMILES", "GetEccentricity"], "Parameter": "dopamine", "question": "What is the eccentricity value of the molecule with the molecule name dopamine?"}
{"tool_path": ["NameToSMILES", "GetHallKierAlpha"], "Parameter": "histidine", "question": "What is the Hall-Kier alpha index for the molecule with the molecule name histidine?"}
{"tool_path": ["NameToSMILES", "GetFrtool_pathCSP3"], "Parameter": "acetone", "question": "Determine the frtool_path of sp3-hybridized carbon atoms in the molecule called acetone by first converting its name to the corresponding SMILES format."}
{"tool_path": ["NameToSMILES", "GetAtomFeature"], "Parameter": "sucrose", "question": "What are the atomic features, such as atomic number, valence, and hybridization, of the molecule with the molecule name sucrose?"}
{"tool_path": ["NameToSMILES", "GetInertialShapeFactor"], "Parameter": "folic acid", "question": "Please determine the Inertial Shape Factor for the molecule with the molecule name folic acid by first converting its name to the corresponding SMILES format."}
{"tool_path": ["NameToSMILES", "GetChi0v"], "Parameter": "niacin", "question": "What is the Chi^0v (Chi-zero-v) valence molecular graph index for the molecule with the molecule name niacin?"}
{"tool_path": ["NameToSMILES", "GetAromaticHeterocyclesNum"], "Parameter": "biotin", "question": "How many aromatic heterocycles are there in the molecule with the molecule name biotin?"}
{"tool_path": ["NameToSMILES", "GetAliphaticCarbocyclesNum"], "Parameter": "urea", "question": "How many aliphatic carbocycles are present in the molecule with the molecule name urea?"}
{"tool_path": ["NameToSMILES", "GetCrippenDescriptors"], "Parameter": "morphine", "question": "Determine the Wildman-Crippen logP value and MR (molecular refractivity) values for the molecule with the molecule name morphine."}
{"tool_path": ["NameToSMILES", "GetDistanceMatrix"], "Parameter": "arginine", "question": "What is the topological distance matrix for the molecule with the molecule name arginine?"}
{"tool_path": ["NameToSMILES", "TestMolecule"], "Parameter": "acetic acid", "question": "Please perform a series of tests, such as sanitization, removal of hydrogens, and canonicalization check, on the molecule identified by the name acetic acid."}
{"tool_path": ["NameToSMILES", "GetChi1n"], "Parameter": "adrenaline", "question": "Please calculate the Chi^1 (chi-one) cluster index for the molecule with the molecule name adrenaline."}
{"tool_path": ["NameToSMILES", "GetAtomsNum"], "Parameter": "glucose", "question": "How many atoms are there in a molecule with the molecule name glucose?"}
{"tool_path": ["NameToSMILES", "GetChi0n"], "Parameter": "pyridoxine", "question": "What is the Chi^0 (chi-zero) cluster index, which is a topological descriptor related to molecular branching, of the molecule with the molecule name pyridoxine?"}
{"tool_path": ["NameToSMILES", "CalculatePhi"], "Parameter": "morphine", "question": "What is the Phi angle of the molecule with the molecule name morphine?"}
{"tool_path": ["NameToSMILES", "SmallMoleculeSimilarityCalculation"], "Parameter": "CC1=CC=C(C=C1)C2=CC=CC=C2", "question": "Determine the molecular similarity between the molecule with the molecule name creatine and the molecule with the SMILES string CC1=CC=C(C=C1)C2=CC=CC=C2 by querying the corresponding SMILES format for creatine and then calculating the similarity based on the molecular fingerprints."}
{"tool_path": ["NameToSMILES", "GetKappa2"], "Parameter": "niacin", "question": "What is the Kappa2 value for the molecule with the molecule name niacin, using its corresponding SMILES format to compute the topological descriptor representing its shape complexity or branching degree?"}
{"tool_path": ["NameToSMILES", "SMILEStoSELFIES"], "Parameter": "creatine", "question": "What is the SELFIES string for the molecule with the molecule name creatine?"}
{"tool_path": ["NameToSMILES", "GetHBDNum"], "Parameter": "salicylic acid", "question": "How many hydrogen bond donors (HBD) are there in the molecule with the molecule name salicylic acid?"}
{"tool_path": ["NameToSMILES", "SMILESToCAS"], "Parameter": "toluene", "question": "What is the CAS number for the molecule with the molecule name toluene?"}
{"tool_path": ["NameToSMILES", "GetRingsNum"], "Parameter": "deoxyribose", "question": "How many rings are there in the molecule with the molecule name deoxyribose?"}
{"tool_path": ["NameToSMILES", "GetHBANum"], "Parameter": "glutathione", "question": "How many hydrogen bond acceptors are there in the molecule with the molecule name glutathione?"}
{"tool_path": ["NameToSMILES", "CalculatePMI2"], "Parameter": "salicylic acid", "question": "Determine the PMI2 (Partial Molecular Information 2) value for the molecule with the molecule name salicylic acid."}
{"tool_path": ["NameToSMILES", "SMILESToCAS", "SafetySummary"], "Parameter": "glutathione", "question": "What are the safety guidelines for the molecule with the molecule name glutathione?"}
{"tool_path": ["NameToSMILES", "GetKappa1"], "Parameter": "glucose", "question": "What is the Kappa1 (κ3) value for the molecule with the molecule   name glucose?"}
{"tool_path": ["NameToSMILES", "GetChi1n"], "Parameter": "glycine", "question": "What is the Chi^1 (chi-one) cluster index for the molecule with the molecule name glycine, based on its corresponding SMILES representation?"}
{"tool_path": ["NameToSMILES", "GetLipinskiHBANum"], "Parameter": "thiamine", "question": "What is the number of Lipinski hydrogen bond acceptors (HBA) in the molecule with the molecule name thiamine?"}
{"tool_path": ["NameToSMILES", "GetAsphericity"], "Parameter": "methionine", "question": "What is the asphericity descriptor for the molecule with the molecule name methionine, which measures how much the molecule deviates from a perfectly spherical shape?"}
{"tool_path": ["NameToSMILES", "GetUSR"], "Parameter": "lysine", "question": "What is the USR (Ultrafast Shape Recognition) descriptor for the molecule with the molecule name lysine?"}
{"tool_path": ["NameToSMILES", "CalculatePMI3"], "Parameter": "glucose", "question": "What is the PMI3 (Partial Molecular Information 3) value for the molecule with the molecule name glucose?"}
{"tool_path": ["NameToSMILES", "GetHeavyAtomsNum"], "Parameter": "caffeine", "question": "How many heavy atoms are present in the molecule with the molecule name caffeine?"}
{"tool_path": ["NameToSMILES", "GetChi1v"], "Parameter": "glucose", "question": "What is the Chi^1v valence molecular graph index for the molecule with the molecule name glucose?"}
{"tool_path": ["NameToSMILES", "CustomPropertyVSA"], "Parameter": "cysteine", "question": "Compute the custom property for the molecule with the molecule name cysteine using the Van der Waals Surface Area (VSA) method."}
{"tool_path": ["NameToSMILES", "CalculateRDF"], "Parameter": "niacin", "question": "Please calculate the RDF (Radial Distribution Function) descriptor for the molecule with the molecule name niacin."}
{"tool_path": ["NameToSMILES", "GetUSRCAT"], "Parameter": "glutathione", "question": "Compute the USRCAT descriptor for the molecule with the molecule name glutathione."}
{"tool_path": ["NameToSMILES", "SMILESToWeight"], "Parameter": "histidine", "question": "What is the molecular weight of the molecule with the molecule name histidine?"}
{"tool_path": ["NameToSMILES", "GetConnectivityInvariants"], "Parameter": "pantothenic acid", "question": "Determine the connectivity invariants for the molecule with the molecule name pantothenic acid by first converting its name to the corresponding SMILES format."}
{"tool_path": ["NameToSMILES", "SMILESToInChI"], "Parameter": "lactose", "question": "What is the SMILES and InChI for the molecule with the molecule name lactose?"}
{"tool_path": ["NameToSMILES", "CalculateWHIM"], "Parameter": "cyanocobalamin", "question": "Determine the WHIM (Weighted Holistic Invariant Molecular) descriptor for the molecule with the molecule name cyanocobalamin."}
{"tool_path": ["InChIKeyToSMILES", "GetChi0v"], "Parameter": "FDMQDKQUTRLUBU-UHFFFAOYSA-N", "question": "Please calculate the Chi^0v (Chi-zero-v) valence molecular graph index for the molecule identified by the InChIKey FDMQDKQUTRLUBU-UHFFFAOYSA-N by first converting the InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "GetExactMolceularWeight"], "Parameter": "LVXJQMNHJWSHET-AATRIKPKSA-N", "question": "What is the exact molecular weight of the molecule that corresponds to the InChIKey LVXJQMNHJWSHET-AATRIKPKSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetGETAWAY"], "Parameter": "XUJNEKJLAYXESH-UHFFFAOYSA-N", "question": "Please calculate the GETAWAY descriptors for the molecule identified by the InChIKey 'XUJNEKJLAYXESH-UHFFFAOYSA-N', first converting the InChIKey to its corresponding SMILES representation."}
{"tool_path": ["InChIKeyToSMILES", "GetAliphaticRingsNum"], "Parameter": "AILRADAXUVEEIR-UHFFFAOYSA-N", "question": "How many aliphatic rings are present in the molecule identified by the InChIKey AILRADAXUVEEIR-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetBridgeheadAtomsNum"], "Parameter": "XNRVGTHNYCNCFF-UHFFFAOYSA-N", "question": "How many bridgehead atoms are there in the molecule identified by the InChIKey XNRVGTHNYCNCFF-UHFFFAOYSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetHeterocyclesNum"], "Parameter": "GTTBEUCJPZQMDZ-UHFFFAOYSA-N", "question": "How many heterocycles are present in the molecule identified by the InChIKey GTTBEUCJPZQMDZ-UHFFFAOYSA-N, after converting the InChIKey to its corresponding SMILES representation?"}
{"tool_path": ["InChIKeyToSMILES", "GetRingsNum"], "Parameter": "AILRADAXUVEEIR-UHFFFAOYSA-N", "question": "How many rings are present in the molecule identified by the InChIKey AILRADAXUVEEIR-UHFFFAOYSA-N, using the InChIKey to obtain the SMILES representation and then calculating the number of rings?"}
{"tool_path": ["InChIKeyToSMILES", "GetSaturatedCarbocyclesNum"], "Parameter": "LVXJQMNHJWSHET-AATRIKPKSA-N", "question": "How many saturated carbocycles are present in the molecule identified by the InChIKey LVXJQMNHJWSHET-AATRIKPKSA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetSaturatedHeterocyclesNum"], "Parameter": "SNICXCGAKADSCV-JTQLQIEISA-N", "question": "Could you please determine the number of saturated heterocycles present in the molecule that corresponds to the InChIKey SNICXCGAKADSCV-JTQLQIEISA-N?"}
{"tool_path": ["InChIKeyToSMILES", "GetSaturatedRingsNum"], "Parameter": "DUYJMQONPNNFPI-UHFFFAOYSA-N", "question": "How many saturated rings can be found in the molecule that corresponds to the InChIKey DUYJMQONPNNFPI-UHFFFAOYSA-N?"}
{"tool_path": ["SELFIEStoSMILES", "GetChi0n"], "Parameter": "[C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "What is the Chi^0 (chi-zero) cluster index of the molecule represented by the SELFIES string [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetChi0v"], "Parameter": "[C][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "What is the Chi^0v (Chi-zero-v) valence molecular graph index of the molecule represented by the SELFIES string [C][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetChi1n"], "Parameter": "[C][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "Could you calculate the chi^1 (chi-one) cluster index for the molecule that is represented by the SELFIES string [C][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetChi1v"], "Parameter": "[C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]", "question": "Please determine the Chi^1v (Chi-one-v) valence molecular graph index for the molecule represented by the SELFIES string [C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O] by first converting it to its corresponding SMILES string."}
{"tool_path": ["SELFIEStoSMILES", "GetChi1v"], "Parameter": "[C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]", "question": "Could you compute the Chi1v valence molecular graph index for the molecule that is represented by the SELFIES string [C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]?"}
{"tool_path": ["SELFIEStoSMILES", "GetChi1n"], "Parameter": "[C][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "Could you please compute the Chi^1 (Chi-one) cluster index for the molecule represented by the SELFIES string [C][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetChi1v"], "Parameter": "[C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "Please compute the Chi^1v valence molecular graph index for the molecule described by the SELFIES string [C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]."}
{"tool_path": ["SELFIEStoSMILES", "GetChi1n"], "Parameter": "[C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]", "question": "What is the Chi^1 cluster index of the molecule represented by the SELFIES string [C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetChi1v"], "Parameter": "[C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]", "question": "Could you determine the Chi^1v valence molecular graph index for the molecule that is represented by the SELFIES string [C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]?"}
{"tool_path": ["SELFIEStoSMILES", "GetCoulombMat"], "Parameter": "[C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]", "question": "Can you compute the Coulomb matrix for the molecule that is represented by the SELFIES string [C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl], where the SELFIES string first needs to be translated into its corresponding SMILES string?"}
{"tool_path": ["SELFIEStoSMILES", "GetCrippenDescriptors"], "Parameter": "[C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]", "question": "Could you determine the Wildman-Crippen logP value and molecular refractivity (MR) for the molecule represented by the SELFIES string [C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetEEMCharges"], "Parameter": "[C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]", "question": "Determine the Electronegativity Equalization Method (EEM) atomic partial charges for the molecule represented by the SELFIES string [C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl] by first translating the SELFIES string into its corresponding SMILES string."}
{"tool_path": ["SELFIEStoSMILES", "GetEccentricity"], "Parameter": "[C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "Could you determine the eccentricity of the molecule that is represented by the SELFIES string [C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetExactMolceularWeight"], "Parameter": "[C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "What is the exact molecular weight of the molecule represented by the SELFIES string [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetFrtool_pathCSP3"], "Parameter": "[C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "What is the frtool_path of sp3-hybridized carbon atoms in the molecule represented by the SELFIES string [C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetGETAWAY"], "Parameter": "[C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "Could you calculate the GETAWAY descriptors for the molecule represented by the SELFIES string [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetHallKierAlpha"], "Parameter": "[C][C][Branch1][C][C][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O][C][C][Branch1][C][C][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "Please calculate the Hall-Kier alpha index for the molecule represented by the SELFIES notation [C][C][Branch1][C][C][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O][C][C][Branch1][C][C][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]."}
{"tool_path": ["SELFIEStoSMILES", "GetInertialShapeFactor"], "Parameter": "[C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]", "question": "What is the Inertial Shape Factor of the molecule represented by the SELFIES string [C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O] when translated into its corresponding SMILES string?"}
{"tool_path": ["SELFIEStoSMILES", "GetKappa1"], "Parameter": "[C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]", "question": "Please calculate the Kappa1 value for the molecule represented by the SELFIES string [C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl], translating the SELFIES into its corresponding SMILES string first."}
{"tool_path": ["SELFIEStoSMILES", "GetKappa2"], "Parameter": "[C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "What is the Kappa2 value for the molecule represented by the SELFIES string [C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetKappa1"], "Parameter": "[C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]", "question": "Could you calculate the Kappa1 value, which is a topological descriptor representing shape complexity or branching degree, for the molecule translated from the SELFIES string [C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O] into its corresponding SMILES string?"}
{"tool_path": ["SELFIEStoSMILES", "GetLabuteASA"], "Parameter": "[C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][N][C][=Branch1][C][=O][/C][=C][/C][N][C][C][C][C][C][Ring1][=Branch1]", "question": "Could you determine the Labute accessible surface area (ASA) value for the molecule that has the SELFIES notation [C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][N][C][=Branch1][C][=O][/C][=C][/C][N][C][C][C][C][C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetMORSE"], "Parameter": "[C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "Could you compute the Molecule Representation of Structures based on Electron diffrtool_path (MORSE) descriptors for the molecule represented by the SELFIES string [C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetNPR1"], "Parameter": "[C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "How can I calculate the NPR1 descriptor for the molecule that is represented by the SELFIES string [C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O] by first converting it to its corresponding SMILES string?"}
{"tool_path": ["SELFIEStoSMILES", "GetNPR2"], "Parameter": "[C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]", "question": "Determine the NPR2 (Normalized Principal Moments Ratio) descriptor for the molecule represented by the SELFIES string [C][O][C][=C][Branch2][Ring1][=C][C][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][=C][N][=C][Ring1][#Branch1][N][C][=C][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][F][Cl][O][C][C][C][N][C][C][O][C][C][Ring1][=Branch1]."}
{"tool_path": ["SELFIEStoSMILES", "GetAliphaticCarbocyclesNum"], "Parameter": "[C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C]", "question": "How many aliphatic carbocycles are present in the molecule represented by the SELFIES string [C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAliphaticHeterocyclesNum"], "Parameter": "[C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]", "question": "How many aliphatic heterocycles are present in the molecule represented by the SELFIES string [C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAliphaticRingsNum"], "Parameter": "[C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "How many aliphatic rings are present in the molecule represented by the SELFIES string [C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAmideBondsNum"], "Parameter": "[C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "Could you find out the number of amide bonds present in the molecule that is represented by the SELFIES string [C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAromaticCarbocyclesNum"], "Parameter": "[C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]", "question": "How many aromatic carbocycles are there in the molecule represented by the SELFIES string [C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAromaticHeterocyclesNum"], "Parameter": "[C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C]", "question": "How many aromatic heterocycles are present in the molecule represented by the SELFIES string [C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAromaticRingsNum"], "Parameter": "[C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C]", "question": "How many aromatic rings are present in the molecule represented by the SELFIES string [C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAtomStereoCentersNum"], "Parameter": "[C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]", "question": "How many atom stereocenters are present in the molecule represented by the SELFIES notation [C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetAtomsNum"], "Parameter": "[C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]", "question": "How many atoms are present in the molecule represented by the SELFIES string [C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetBridgeheadAtomsNum"], "Parameter": "[C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "Determine the number of bridgehead atoms in the molecule that is represented by the SELFIES string [C][C][Branch1][C][C][C][C][Branch1][C][C][Branch1][C][C][C][=C][C][=C][C][=C][Ring1][=Branch1]."}
{"tool_path": ["SELFIEStoSMILES", "GetHBANum"], "Parameter": "[C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]", "question": "How many hydrogen bond acceptors (HBA) are present in the molecule represented by the SELFIES string [C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetHeavyAtomsNum"], "Parameter": "arginine", "question": "How many heavy atoms are present in the molecule represented by the SELFIES string for the molecule [C][N][C][C][C@][C@@H1][C@H1][Ring1][=Branch1][C][C][=C][Ring1][=Branch1][C][=Branch1][=Branch2][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][O][O][C@H1][Ring1][=N][C@H1][Branch1][Branch1][C][=C][Ring1][#C][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetHeteroatomsNum"], "Parameter": "[C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "How many heteroatoms are present in the molecule represented by the SELFIES string [C][C][=Branch1][C][=O][O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetHeterocyclesNum"], "Parameter": "[C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "How many heterocyclic rings are present in the molecule represented by the SELFIES notation [C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetLipinskiHBANum"], "Parameter": "[C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C]", "question": "hat is the number of Lipinski hydrogen bond acceptors (HBA) for the molecule represented by the SELFIES string [C][N][C][=C][Branch1][O][C][=C][C][=C][C][=C][Ring1][=Branch1][Ring1][=Branch2][C][=N][C][=Branch1][=Branch1][=N][C][=C][Ring1][=Branch1][N][C][=C][Branch2][Ring1][=N][C][=C][Branch1][=C][C][=Branch1][Ring2][=C][Ring1][=Branch1][N][C][=Branch1][C][=O][C][=C][N][Branch1][C][C][C][C][N][Branch1][C][C][C][O][C], after converting it into its corresponding SMILES string?"}
{"tool_path": ["SELFIEStoSMILES", "GetLipinskiHBDNum"], "Parameter": "[C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]", "question": "How many Lipinski hydrogen bond donors (HBD) are present in the molecule represented by the SELFIES string [C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetRingsNum"], "Parameter": "[C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]", "question": "How many rings are there in the molecule represented by the SELFIES string [C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetRotatableBondsNum"], "Parameter": "[C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "How many rotatable bonds are there in the molecule represented by the SELFIES string [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetSaturatedCarbocyclesNum"], "Parameter": "[C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]", "question": "How many saturated carbocycles are present in the molecule represented by the SELFIES string [C][C][O][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1][C][=Branch1][C][=O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetSaturatedHeterocyclesNum"], "Parameter": "[C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "How many saturated heterocycles are present in the molecule represented by the SELFIES string [C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetSaturatedRingsNum"], "Parameter": "[C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]", "question": "How many saturated rings are there in the molecule represented by the SELFIES string [C][=C][C][=C][Branch1][Branch1][C][=C][Ring1][=Branch1][C][C][Branch1][Ring2][O][Ring1][Ring1][C][=Branch1][C][=O][C][=C][C][=C][C][=C][Ring1][=Branch1]?"}
{"tool_path": ["SELFIEStoSMILES", "GetSpiroAtomsNum"], "Parameter": "[C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]", "question": "How many spiro atoms are present in the molecule represented by the SELFIES string [C][Branch2][Ring1][=C][C][Branch2][Ring1][=Branch2][C][O][C][=Branch1][C][=O][C][C][Branch1][#Branch1][C][C][=Branch1][C][=O][O][Branch1][=Branch1][C][=Branch1][C][=O][O][O][O][O]?"}
{"tool_path": ["SELFIEStoSMILES", "GetUnspecifiedAtomStereoCentersNum"], "Parameter": "[C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]", "question": "How many unspecified atomic stereocenters are present in the molecule represented by the SELFIES string [C][=C][C][=Branch1][=Branch2][=C][C][=C][Ring1][=Branch1][N][=C][=O][Cl]?"}
{"tool_path": ["SlnToSmiles", "GetAromaticHeterocyclesNum"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you determine the number of aromatic heterocycles present in the molecule described by the SLN string N[1]CH=CHCH2CH=@1 by first converting it to a SMILES string and then calculating the number of aromatic heterocycles from the resulting SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetAliphaticCarbocyclesNum"], "Parameter": "C(Cl)(Br)(F)H", "question": "Please take the SLN string C(Cl)(Br)(F)H and convert it to a SMILES string using the appropriate chemical tool. After obtaining the SMILES string, determine the number of aliphatic carbocycles present in the resulting molecular structure using the relevant chemical tool."}
{"tool_path": ["SlnToSmiles", "GetCrippenDescriptors"], "Parameter": "CH3CH2C(OH)CH3", "question": "Could you determine the Wildman-Crippen logP and MR (molecular refractivity) values for the molecule represented by the SLN string CH3CH2C(OH)CH3, by first converting the SLN string to a SMILES string and then calculating the required descriptors?"}
{"tool_path": ["SlnToSmiles", "GetAliphaticHeterocyclesNum"], "Parameter": "C-C(=O)-O", "question": "Please calculate the number of aliphatic heterocycles present in the molecule that is identified by the SLN string C-C(=O)-O."}
{"tool_path": ["SlnToSmiles", "GetAutocorrelation3D"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you please compute the 3D autocorrelation descriptors for the molecule that is represented by the SLN string N[1]CH=CHCH2CH=@1?"}
{"tool_path": ["SlnToSmiles", "GetChi1n"], "Parameter": "CH3CH2C(OH)CH3", "question": "Could you please calculate the chi^1 (chi-one) cluster index for the molecule represented by the SLN string CH3CH2C(OH)CH3, by first converting it to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetAtomsNum"], "Parameter": "C-C(=O)-O", "question": "Could you please convert the SLN string 'C-C(=O)-O' to a SMILES string? After converting, determine the total number of atoms present in the molecule represented by the resulting SMILES string."}
{"tool_path": ["SlnToSmiles", "GetChi0n"], "Parameter": "C-C(=O)-O", "question": "Could you please calculate the Chi^0 (chi-zero) cluster index for the molecule represented by the SLN string C-C(=O)-O by first converting it to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetNPR1"], "Parameter": "C[1]H:CH:CH:CH:CH:CH:@1", "question": "Could you please calculate the Normalized Principal Moments Ratio (NPR1) descriptor for the molecule represented by the SLN string C[1]H:CH:CH:CH:CH:CH:@1, by first converting the SLN string to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "SMILEStoSELFIES", "LengthSELFIES"], "Parameter": "C-C(=O)-O", "question": "Please calculate the total number of symbols present in the SELFIES string that corresponds to the SLN string C-C(=O)-O."}
{"tool_path": ["SlnToSmiles", "SMILESToInChI", "InChIToCSID"], "Parameter": "C-C(=O)-O", "question": "Could you please convert the SLN string \"C-C(=O)-O\" to its corresponding ChemSpider ID by first converting the SLN string to a SMILES string, then converting the SMILES string to an InChI, and finally converting the InChI to a ChemSpider ID?"}
{"tool_path": ["SlnToSmiles", "GetFeatureInvariants"], "Parameter": "C-C(=O)-N", "question": "Could you compute the feature invariants for the molecule identified by the SLN string 'C-C(=O)-N' by first converting it to a SMILES string and then calculating its feature invariants?"}
{"tool_path": ["SlnToSmiles", "GetKappa2"], "Parameter": "C-C(C)(C)-O", "question": "Could you please compute the Kappa2 value for the molecule represented by the SLN string C-C(C)(C)-O, after converting this SLN string to its corresponding SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetHBDNum"], "Parameter": "CH3C(=O)OH", "question": "Could you determine the number of hydrogen bond donors (HBD) for the molecule identified by the SLN string CH3C(=O)OH by first converting the SLN string to a SMILES string and then calculating the HBD from the obtained SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetAmideBondsNum"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you please calculate the number of amide bonds present in the molecule represented by the SLN string N[1]CH=CHCH2CH=@1?"}
{"tool_path": ["SlnToSmiles", "GetLipinskiHBDNum"], "Parameter": "C-C(=O)-O", "question": "Could you determine the number of Lipinski hydrogen bond donors (HBD) for the molecule identified by the SLN string C-C(=O)-O by first converting the SLN string to a SMILES string and then calculating the HBD?"}
{"tool_path": ["SlnToSmiles", "ProcessFingerprintMol"], "Parameter": "C(Cl)(Br)(F)H", "question": "Can you convert the SLN string \"C(Cl)(Br)(F)H\" into its corresponding hexadecimal molecular fingerprint representation by first transforming it into a SMILES string and then generating its molecular fingerprint?"}
{"tool_path": ["SlnToSmiles", "GetChi1v"], "Parameter": "C[1]H:CH:CH:CH:CH:CH:@1", "question": "Could you please calculate the Chi^1v valence molecular graph index for the molecule represented by the SLN string C[1]H:CH:CH:CH:CH:CH:@1 by first converting the SLN string to a SMILES string and then using that SMILES string to find the Chi^1v index?"}
{"tool_path": ["SlnToSmiles", "SMILESToCAS"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you please convert the SLN string N[1]CH=CHCH2CH=@1 to its corresponding CAS number?"}
{"tool_path": ["SlnToSmiles", "GetAdjacencyMatrix"], "Parameter": "C-C(C)(C)-O", "question": "Could you please calculate the adjacency matrix for the molecule specified by the SLN string C-C(C)(C)-O by first converting the SLN string to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetRingsNum"], "Parameter": "CH3C(=O)OH", "question": "Could you determine the number of rings present in the molecule described by the SLN string CH3C(=O)OH by first converting this SLN string to a SMILES string and then calculating the number of rings in the resulting SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetHBANum"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you calculate the number of hydrogen bond acceptors in the molecule that is represented by the SLN string N[1]CH=CHCH2CH=@1?"}
{"tool_path": ["SlnToSmiles", "CalculatePMI2"], "Parameter": "CH3C(=O)OH", "question": "Could you determine the PMI2 (Partial Molecular Information 2) value for the molecule characterized by the SLN string \"CH3C(=O)OH\" by first converting it to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "SMILESToCAS", "SafetySummary"], "Parameter": "C[1]H:CH:CH:CH:CH:CH:@1", "question": "Could you please provide the safety information for the molecule that is represented by the SLN string C[1]H:CH:CH:CH:CH:CH:@1, by first converting the SLN string to a SMILES string, then converting the SMILES string to a CAS number, and finally querying the safety information using the CAS number?"}
{"tool_path": ["SlnToSmiles", "GetKappa1"], "Parameter": "CH3CH2C(OH)CH3", "question": "Could you determine the Kappa1 value, which is a topological descriptor representing the shape complexity or branching degree, for the molecule described by the SLN string \"CH3CH2C(OH)CH3\"?"}
{"tool_path": ["SlnToSmiles", "GetChi1n"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you determine the Chi^1 cluster index for the molecule represented by the SLN string N[1]CH=CHCH2CH=@1 by first converting it to a SMILES string and then calculating the index?"}
{"tool_path": ["SlnToSmiles", "GetLipinskiHBANum"], "Parameter": "CH3C(=O)OH", "question": "Could you please determine the number of Lipinski hydrogen bond acceptors in the molecule represented by the SLN string CH3C(=O)OH by first converting the SLN string to a SMILES string and then calculating the hydrogen bond acceptors?"}
{"tool_path": ["SlnToSmiles", "GetAsphericity"], "Parameter": "CH3C(=O)OH", "question": "Could you compute the asphericity descriptor for the molecule represented by the SLN string CH3C(=O)OH by first converting the SLN string to a SMILES string and then calculating the asphericity?"}
{"tool_path": ["SlnToSmiles", "GetCoulombMat"], "Parameter": "C-C(=O)-O", "question": "Could you please convert the SLN string \"C-C(=O)-O\" into a SMILES string, and then calculate the Coulomb matrix for the molecule?"}
{"tool_path": ["SlnToSmiles", "GetMACCSKeysFingerprint"], "Parameter": "CH3CH2C(OH)CH3", "question": "Could you please convert the SLN string 'CH3CH2C(OH)CH3' to its corresponding Molecular ACCess System (MACCS) keys fingerprint?"}
{"tool_path": ["SlnToSmiles", "GetUSR"], "Parameter": "C[1]H:CH:CH:CH:CH:CH:@1", "question": "Could you perform a comparison of the three-dimensional structure of the molecule represented by the SLN string C[1]H:CH:CH:CH:CH:CH:@1 using the USR (Ultrafast Shape Recognition) descriptor by first converting the SLN string to a SMILES string and then computing the USR descriptor for that SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetSaturatedCarbocyclesNum"], "Parameter": "CH3CH2C(OH)CH3", "question": "Could you determine the number of saturated carbocycles present in the molecule that is represented by the SLN string CH3CH2C(OH)CH3 by first converting it to a SMILES string and then calculating the number of saturated carbocycles in that molecule?"}
{"tool_path": ["SlnToSmiles", "GenerateEstateFingerprint"], "Parameter": "C-C(C)(C)-O", "question": "Could you generate the EState fingerprint for the molecule identified by the SLN string C-C(C)(C)-O by first converting the SLN string to a SMILES string and then generating the EState fingerprint using the SMILES representation?"}
{"tool_path": ["SlnToSmiles", "GetSpiroAtomsNum"], "Parameter": "C[1]H:CH:CH:CH:CH:CH:@1", "question": "Please convert the SLN representation 'C[1]H:CH:CH:CH:CH:CH:@1' to its corresponding SMILES notation using the SLN to SMILES conversion function. After obtaining the SMILES string, use the appropriate function to identify the number of spiro atoms present in the resulting molecular structure."}
{"tool_path": ["SlnToSmiles", "CalculatePMI3"], "Parameter": "C(Cl)(Br)(F)H", "question": "Could you compute the PMI3 (Partial Molecular Information 3) value for the molecule specified by the SLN string C(Cl)(Br)(F)H by first converting the SLN string to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetChi1n"], "Parameter": "CH3CH2C(OH)CH3", "question": "Could you determine the Chi^1 (Chi-one) cluster index for the molecule represented by the SLN string CH3CH2C(OH)CH3 by first converting it to a SMILES string?"}
{"tool_path": ["SlnToSmiles", "GetHeavyAtomsNum"], "Parameter": "CH3C(=O)OH", "question": "Could you please determine the number of heavy atoms present in the molecule represented by the SLN string CH3C(=O)OH?"}
{"tool_path": ["SlnToSmiles", "CheckValidRingCut"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Please convert the SLN string `N[1]CH=CHCH2CH=@1` into its corresponding SMILES string and then verify if the resulting SMILES string represents a valid ring cut in the molecule."}
{"tool_path": ["SlnToSmiles", "GetChi1v"], "Parameter": "CH3CH2C(OH)CH3", "question": "Could you calculate the Chi^1v valence molecular graph index for the molecule represented by the SLN string CH3CH2C(OH)CH3?"}
{"tool_path": ["SlnToSmiles", "CustomPropertyVSA"], "Parameter": "C-C(C)(C)-O", "question": "Could you compute the custom Van der Waals Surface Area (VSA) property for the molecule represented by the SLN string C-C(C)(C)-O?"}
{"tool_path": ["SlnToSmiles", "GetStereoCodeFromSmiles"], "Parameter": "C-C(C)(C)-O", "question": "Could you generate the stereochemistry code for the molecule specified by the SLN string \"C-C(C)(C)-O\" by first converting the SLN string to a SMILES string and then obtaining the stereo code from the resulting SMILES string?"}
{"tool_path": ["SlnToSmiles", "SMILESToWeight"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you calculate the molecular weight of the molecule that is represented by the SLN string N[1]CH=CHCH2CH=@1?"}
{"tool_path": ["SlnToSmiles", "GetSaturatedRingsNum"], "Parameter": "N[1]CH=CHCH2CH=@1", "question": "Could you determine the number of saturated rings present in the molecule represented by the SLN string N[1]CH=CHCH2CH=@1?"}
{"tool_path": ["NameToSMILES", "GetBCUT"], "Parameter": "methionine", "question": "What are the two-dimensional BCUT (Burden CAS University of Texas) descriptors, including mass, Gasteiger charge, Crippen logP, and Crippen MR values, for the molecule with the name methionine?"}
{"tool_path": ["NameToSMILES", "GetMolFrags"], "Parameter": "guanosine", "question": "What disconnected fragments are present in the molecular structure of the compound with the name guanosine?"}
{"tool_path": ["NameToSMILES", "GetRdkFingerprintFromSmiles"], "Parameter": "arginine", "question": "Can you generate the RDKit molecular fingerprint for the compound with the name arginine?"}
{"tool_path": ["NameToSMILES", "GetLabuteASA"], "Parameter": "deoxyribose", "question": "What is the Labute accessible surface area (ASA) value for the molecule with the name deoxyribose?"}
{"tool_path": ["NameToSMILES", "CalculateEstateVsa"], "Parameter": "glutamine", "question": "What are the EState VSA (Valuation Surface Area) indices for the molecule with the name glutamine?"}
{"tool_path": ["NameToSMILES", "GetAtomPairFingerprint"], "Parameter": "histidine", "question": "What is the atom pair fingerprint for the molecule with the name histidine?"}
{"tool_path": ["NameToSMILES", "GetFeatureInvariants"], "Parameter": "morphine", "question": "Can you compute the feature invariants, similar to FCFP (Feature Centroid Fingerprints), for the molecule with the name morphine?"}
{"tool_path": ["NameToSMILES", "GetChi1v"], "Parameter": "guanosine", "question": "What is the Chi^1v (Chi-one-v) valence molecular graph index for the compound with the name guanosine?"}
{"tool_path": ["NameToSMILES", "GetMACCSKeysFingerprint"], "Parameter": "ethanol", "question": "Can you compute the MACCS keys fingerprint for the molecule with the name ethanol?"}
{"tool_path": ["NameToSMILES", "GetChi1v"], "Parameter": "nicotine", "question": "What is the Chi1v valence molecular graph index for the molecule with the name nicotine?"}
{"tool_path": ["NameToSMILES", "GetChi1n"], "Parameter": "adrenaline", "question": "What is the Chi^1 cluster index for the compound with the molecular name adrenaline?"}
{"tool_path": ["NameToSMILES", "GetSaturatedRingsNum"], "Parameter": "biotin", "question": "How many saturated rings are present in the molecular structure of the molecule with the name biotin?"}
{"tool_path": ["NameToSMILES", "BuildAtomPairFpFromSmiles"], "Parameter": "glutamine", "question": "What is the Atom Pair Fingerprint for the molecule with the name glutamine?"}
{"tool_path": ["NameToSMILES", "GenerateEstateFingerprint"], "Parameter": "glutamine", "question": "Can you generate the EState fingerprint for the compound with the name glutamine?"}
{"tool_path": ["NameToSMILES", "CalculatePMI1"], "Parameter": "biotin", "question": "What is the first principal moment of inertia (PMI1) for the molecule with the name biotin?"}
{"tool_path": ["NameToSMILES", "GetCoulombMat"], "Parameter": "serotonin", "question": "What is the Coulomb matrix for the molecule with the name serotonin?"}
{"tool_path": ["SELFIEStoSMILES", "GetHBDNum"], "question": "How many hydrogen bond donors (HBD) are present in the molecule that has the SELFIES representation [#C-1][=N][#S-1][#N][O+1][=P+1][#B-1][B-1]?"}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetKappa1"], "question": "What are the chi^0 (chi-zero) cluster index and the Kappa1 value for the molecule with the name benzene?"}
{"tool_path": ["NameToSMILES", "GetMolFormula", "GetExactMolceularWeight"], "question": "What are the molecular formula and the exact molecular weight of the molecule with the name ethanol?"}
{"tool_path": ["NameToSMILES", "CalculateTPSA", "AssignOxidationNumbers"], "question": "What is the Topological Polar Surface Area (TPSA) and the oxidation number of each atom in the molecule with the name acetaminophen?"}
{"tool_path": ["NameToSMILES", "GetChi0v", "BuildMorganFpFromSmiles"], "question": "What are the Chi^0v (Chi-zero-v) valence molecular graph index and the Morgan fingerprint for the molecule with the name ibuprofen?"}
{"tool_path": ["NameToSMILES", "GetHeavyAtomsNum", "GetRotatableBondsNum"], "question": "How many heavy atoms and rotatable bonds are in the molecule with the name aspirin?"}
{"tool_path": ["NameToSMILES", "GetAutocorrelation3D", "CalculateRadiusOfGyration"], "question": "What are the 3D autocorrelation descriptors and the radius of gyration for the molecule with the name glucose?"}
{"tool_path": ["NameToSMILES", "GetAutocorrelation2D", "GetCrippenDescriptors"], "question": "What are the 2D autocorrelation descriptors and the Wildman-Crippen logP and MR (molecular refractivity) values for the molecule with the name adenosine?"}
{"tool_path": ["NameToSMILES", "GetEEMCharges", "GetChi1v"], "question": "What are the EEM (Electronegativity Equalization Method) atomic partial charges and the Chi^1v (Chi-one-v) valence molecular graph index for the molecule with the name caffeine?"}
{"tool_path": ["NameToSMILES", "GetMolFormula", "GetExactMolceularWeight"], "question": "What are the molecular formula and exact molecular weight of the molecule with the name aspirin?"}
{"tool_path": ["NameToSMILES", "CalculatePhi", "GetKappa2"], "question": "What are the Phi angle and the Kappa2 value of the molecule with the name oxycodone?"}
{"tool_path": ["NameToSMILES", "GetChi1n", "GetExactMolceularWeight"], "question": "What are the Chi^1 cluster index (Chi-one) and the exact molecular weight of the molecule with the name dexamethasone?"}
{"tool_path": ["NameToSMILES", "CalculatePMI2", "GetNPR1"], "question": "What are the PMI2 (Partial Molecular Information 2) value and the NPR1 (Normalized Principal Moments Ratio) descriptor for the molecule with the name dexamethasone?"}
{"tool_path": ["NameToSMILES", "GetNPR2", "CalculateSpherocityIndex"], "question": "What are the NPR2 (Normalized Principal Moments Ratio) descriptor and the sphericity index for the molecule with the name dexamethasone?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1"], "question": "What are the Chi^1v valence molecular graph index and the Kappa1 value for the molecule with the name dexamethasone?"}
{"tool_path": ["NameToSMILES", "GetMACCSKeysFingerprint", "GetHeavyAtomsNum"], "question": "What are the MACCS keys fingerprint and the number of heavy atoms for the molecule with the name dexamethasone?"}
{"tool_path": ["NameToSMILES", "GetAtomsNum", "GetAdjacencyMatrix"], "question": "What are the total number of atoms and the adjacency matrix for the molecule with the name caffeine?"}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetChi1v"], "question": "What are the chi^0 cluster index and the Chi^1v valence molecular graph index for the molecule with the name caffeine?"}
{"tool_path": ["NameToSMILES", "GetKappa1", "GetChi1v"], "question": "What are the Kappa1 value and Chi1v for the molecule with the name alprazolam?"}
{"tool_path": ["NameToSMILES", "NameToSMILES", "GetFormalCharge", "GetRotatableBondsNum"], "question": "What is the formal charge of the molecule with the name caffeine and the number of rotatable bonds in the molecule with the name dexamethasone?"}
{"tool_path": ["NameToSMILES", "GetAliphaticCarbocyclesNum", "GetAromaticCarbocyclesNum"], "question": "How many aliphatic and aromatic carbocycles are present in the molecule with the name caffeine?"}
{"tool_path": ["NameToSMILES", "GetEccentricity", "GetSpiroAtomsNum"], "question": "What are the number of spiro atoms and the eccentricity of the molecule with the name adenosine?"}
{"tool_path": ["NameToSMILES", "GetMORSE", "GetLabuteASA"], "question": "What are the MORSE descriptors and the Labute accessible surface area (ASA) value for the molecule with the name benzaldehyde?"}
{"tool_path": ["NameToSMILES", "GetKappa2", "CalculateRadiusOfGyration"], "question": "What are the Kappa2 value and the radius of gyration for the molecule with the name nitrazepam?"}
{"tool_path": ["NameToSMILES", "GetFormalChargeOfAtoms", "GetMolFrags"], "question": "What are the formal charge of each atom and the disconnected fragments in the molecule with the name benzaldehyde?"}
{"tool_path": ["NameToSMILES", "GetTopologicalTorsionFingerprint", "GetMolFormula"], "question": "Please provide the SMILES string for the molecule with the molecule name \"benzaldehyde,\" then calculate its topological torsion fingerprint, and finally determine the molecular formula of this molecule."}
{"tool_path": ["NameToSMILES", "GetHeteroatomsNum"], "question": "Determine how many heteroatoms in the molecule with the name benzaldehyde."}
{"tool_path": ["NameToSMILES", "GetHBDNum", "GetAromaticHeterocyclesNum"], "question": "Determine the number of hydrogen bond donors (HBD) and the number of aromatic heterocycles present in the molecule with the name diazepam."}
{"tool_path": ["NameToSMILES", "GetFrtool_pathCSP3", "GetBridgeheadAtomsNum"], "question": "Please calculate the frtool_path of sp3-hybridized carbon atoms and determine the number of bridgehead atoms in molecule name flunitrazepam."}
{"tool_path": ["NameToSMILES", "GetCrippenDescriptors"], "question": "Please provide the SMILES string for the molecule with the molecule name \"lorazepam.\" Additionally, the Wildman-Crippen logP and MR values for the same molecule."}
{"tool_path": ["NameToSMILES", "GetAliphaticRingsNum", "GetLipinskiHBDNum"], "question": "Determine the number of aliphatic rings and the number of Lipinski hydrogen bond donors (HBD) present in the molecule with name estazolam."}
{"tool_path": ["NameToSMILES", "GetKappa1", "GetCrippenDescriptors"], "question": "Please provide the SMILES string for the molecule with the molecule name midazolam and then the Kappa1 value for the molecule. Additionally, determine the Wildman-Crippen logP and MR (molecular refractivity) values for the molecule."}
{"tool_path": ["NameToSMILES", "GetChi0v", "GetKappa1"], "question": "Determine the Chi^0v valence molecular graph index and the Kappa1 value for molecule with the name prazepam."}
{"tool_path": ["NameToSMILES", "GetRotatableBondsNum", "GetAutocorrelation3D"], "question": "Please  determine the number of rotatable bonds in the molecule and compute the 3D autocorrelation descriptors for the molecule with the name prazepam."}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetKappa1", "CalculateTPSA"], "question": "Determine the chi^0 (chi-zero) cluster index, Kappa1 value, and the topological polar surface area (TPSA) for the molecule with the name glucose."}
{"tool_path": ["NameToSMILES", "GetChi1v", "CalculatePBF"], "question": "Calculate the Chi^1v valence molecular graph index and the plane of best fit (PBF) descriptor of the molecule with the name benzaldehyde."}
{"tool_path": ["NameToSMILES", "GetCrippenDescriptors", "CalculateRadiusOfGyration"], "question": "Please provide the SMILES string for the molecule with the molecule name \"cholesterol\" and then calculate the Wildman-Crippen logP value, the MR (molecular refractivity) values, and the radius of gyration for the molecule."}
{"tool_path": ["NameToSMILES", "GetMolFormula", "GetExactMolceularWeight", "GetEEMCharges"], "question": "What are the molecular formula, exact molecular weight, and EEM atomic partial charges for the molecule with the name aspirin?"}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetMolFormula", "GetExactMolceularWeight"], "question": "Determine the chi^0 cluster index, molecular formula, and exact molecular weight of the molecule with the name paracetamol."}
{"tool_path": ["NameToSMILES", "GetChi1v", "CalculateSpherocityIndex"], "question": "Please provide the SMILES string for the molecule with the molecule name \"ibuprofen\" and calculate the Chi^1v valence molecular graph index and the sphericity index."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetCrippenDescriptors"], "question": "Convert the molecule with the molecule name \"dipyrone\" to its SMILES format, then calculate the Chi^1v valence molecular graph index, and the Wildman-Crippen logP and MR values for this molecule."}
{"tool_path": ["NameToSMILES", "GetNPR1", "GetNPR2"], "question": "What are the NPR1 and NPR2 descriptors for the molecule with the name cortisol?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1", "CalculateRadiusOfGyration"], "question": "Determine the Chi1v valence molecular graph index, Kappa1 value, and radius of gyration for the molecule with the name melatonin."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1", "GetAutocorrelation2D"], "question": "Please provide the SMILES string for the molecule with the molecule name \"dopamine\" and then calculate the Chi1v valence molecular graph index, the Kappa1 value, and the 2D autocorrelation descriptors for the molecule."}
{"tool_path": ["NameToSMILES", "GetChi1n", "GetKappa1", "GetEEMCharges"], "question": "Please convert the molecule with the molecule name \"adenine\" to its corresponding SMILES representation. After obtaining the SMILES format, calculate the Chi^1 cluster index, the Kappa1 value, and determine the EEM atomic partial charges for this molecule using the provided SMILES."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetMolFormula", "GetHeavyAtomsNum"], "question": "What are the Chi^1v valence molecular graph index, the molecular formula, and the total number of heavy atoms for the molecule with the name uracil?"}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetKappa1", "GetAutocorrelation3D"], "question": "Calculate the chi^0 cluster index, Kappa1 value, and the 3D autocorrelation descriptors for the molecule with the name pyridoxine."}
{"tool_path": ["NameToSMILES", "GetChi1v", "CalculateTPSA"], "question": "Please provide the SMILES string representation for the molecule with the molecule name \"biotin,\" then determine the Chi^1v valence molecular graph index and the topological polar surface area (TPSA) for the molecule."}
{"tool_path": ["NameToSMILES", "GetKappa1", "CalculatePBF"], "question": "Please provide the SMILES string for the molecule with the molecule name \"niacin\" and then calculate its Kappa1 value, and the plane of best fit (PBF) descriptor."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1", "GetEEMCharges"], "question": "Convert the molecule with the molecule name \"ribose\" to its corresponding SMILES representation. Subsequently, calculate the Chi^1v valence molecular graph index, Kappa1 value, and the EEM atomic partial charges for this molecule using the obtained SMILES format."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa2", "CalculateTPSA"], "question": "What are the Chi1v valence molecular graph index, the Kappa2 value, and the topological polar surface area (TPSA) for the molecule with the name inositol?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1", "GetHeavyAtomsNum"], "question": "Convert the molecule with the molecule name \"arginine\" to its corresponding SMILES representation, and then determine the Chi^1v valence molecular graph index, the Kappa1 value, and the number of heavy atoms in the molecule."}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetEEMCharges"], "question": "Please convert the molecule with the molecule name \"threonine\" to its corresponding SMILES representation. Then, using this SMILES format, calculate the chi^0 (chi-zero) cluster index, and the EEM (Electronegativity Equalization Method) atomic partial charges for this molecule."}
{"tool_path": ["NameToSMILES", "GetChi1v", "CalculatePBF"], "question": "Please provide the SMILES string for the molecule with the molecule name cysteine and calculate the Chi^1v valence molecular graph index, and the plane of best fit (PBF) descriptor for the molecule."}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetKappa1", "CalculateTPSA"], "question": "What are the chi^0 cluster index, the Kappa1 value, and the topological polar surface area (TPSA) for the molecule with the name amphetamine?"}
{"tool_path": ["NameToSMILES", "GetMolFormula", "GetExactMolceularWeight", "GetEEMCharges"], "question": "What are the molecular formula, exact molecular weight, and the EEM atomic partial charges for the molecule with the name morphine?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1"], "question": "What are the Chi^1v valence molecular graph index and the Kappa1 value for the molecule with the name serotonin?"}
{"tool_path": ["NameToSMILES", "GetMolFormula", "GetExactMolceularWeight"], "question": "What are the molecular formula and exact molecular weight of the molecule with the name acetaminophen?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "CalculateSpherocityIndex"], "question": "Please calculate the Chi^1v valence molecular graph index and the sphericity index for the molecule with the name ibuprofen."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetNPR1", "GetNPR2"], "question": "Please calculate the Chi^1v valence molecular graph index, NPR1 and NPR2 descriptors for the molecule with the name epinephrine."}
{"tool_path": ["NameToSMILES", "GetChi0n", "CalculateTPSA"], "question": "Calculate the chi^0 cluster index and the topological polar surface area (TPSA) for the molecule with the name codeine."}
{"tool_path": ["NameToSMILES", "GetKappa2", "GetEEMCharges"], "question": "What are the Kappa2 value and EEM atomic partial charges of the molecule with the name naltrexone?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa2"], "question": "What are the Chi^1v valence molecular graph index and the Kappa2 value for the molecule with the name naloxone?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1", "CalculateRadiusOfGyration"], "question": "Please provide the SMILES string for the molecule with the molecule name \"amphetamine\" and determine the Chi^1v valence molecular graph index, the Kappa1 value, and the radius of gyration for the molecule."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetMolFormula"], "question": "What are the Chi1v valence molecular graph index and the molecular formula for the molecule with the name adenosine?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetMolFormula", "CalculateTPSA"], "question": "Please provide the SMILES string for the molecule with the molecule name \"morphine,\" then calculate and report the Chi^1v valence molecular graph index, the molecular formula, and the topological polar surface area (TPSA) for the molecule."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa2", "GetEEMCharges"], "question": "What are the Chi1v valence molecular graph index, Kappa2 value, and the EEM atomic partial charges for the molecule with the name serotonin?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetRingsNum"], "question": "What are the Chi1v valence molecular graph index and the number of rings for the molecule with the name dopamine?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetEEMCharges"], "question": "What are the Chi^1v valence molecular graph index and the EEM atomic partial charges for the molecule with the name LSD?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetCrippenDescriptors"], "question": "Please provide the SMILES string for the molecule with the molecule name amphetamine and then determine the Chi^1v valence molecular graph index, the Wildman-Crippen logP value, the molecular refractivity (MR) values in the molecule."}
{"tool_path": ["NameToSMILES", "GetChi0n", "CalculateTPSA"], "question": "Determine the chi^0 (chi-zero) cluster index and the topological polar surface area (TPSA) for the molecule with the name adenosine."}
{"tool_path": ["NameToSMILES", "GetChi1v", "CalculateRadiusOfGyration"], "question": "Please provide the SMILES string for the molecule with the molecule name \"glucose\" and then calculate the Chi^1v valence molecular graph index and the radius of gyration."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetCrippenDescriptors"], "question": "What are the Chi^1v valence molecular graph index, the Wildman-Crippen logP and MR values for the molecule with the name nicotine?"}
{"tool_path": ["NameToSMILES", "GetChi0n", "GetEEMCharges"], "question": "What are the chi^0 (chi-zero) cluster index and the EEM atomic partial charges for the molecule with the name serotonin?"}
{"tool_path": ["NameToSMILES", "GetChi1v", "CalculatePBF"], "question": "Please provide the SMILES string for the molecule with the molecule name \"epinephrine\" and calculate the Chi^1v valence molecular graph index, and the plane of best fit (PBF) descriptor."}
{"tool_path": ["NameToSMILES", "GetChi1v", "GetKappa1"], "question": "What are the Chi1v valence molecular graph index and the Kappa1 value for the molecule with the name dopamine?"}
{"tool_path": ["InChIKeyToSMILES", "SMILESToCAS", "SMILESToCAS", "CheckExplosiveness", "CheckExplosiveness"], "question": "Is the substance represented by the InChIKey 'BQJCRHHNABKAKU-KBQPJGBKSA-N' and the SMILES 'C1CN(CCC1N2C3=CC=CC=C3NC2=O)CCCC(C4=CC=C(C=C4)F)C5=CC=C(C=C5)F' considered explosive?"}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetKappa1", "GetKappa1", "GetKappa1"], "question": "What is the Kappa1 value for the molecules identified by the InChIKey 'JCCNYMKQOSZNPW-UHFFFAOYSA-N' the SMILES 'C1CN(CCC1N2C3=CC=CC=C3NC2=O)CCCC(C4=CC=C(C=C4)F)C5=CC=C(C=C5)F' and the InChI 'InChI=1S/C15H21NO2/c1-3-18-14(17)15(9-11-16(2)12-10-15)13-7-5-4-6-8-13/h4-8H,3,9-12H2,1-2H3'?"}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetMORSE", "GetMORSE", "GetMORSE"], "question": "Calculate the Molecule Representation of Structures based on Electron diffraction (MORSE) descriptors for the molecules identified by the InChIKey 'IBAQFPQHRJAVAV-ULAWRXDQSA-N' and the InChI 'InChI=1S/C15H21NO2/c1-3-18-14(17)15(9-11-16(2)12-10-15)13-7-5-4-6-8-13/h4-8H,3,9-12H2,1-2H3'."}
{"tool_path": ["InChIKeyToSMILES", "GetAliphaticRingsNum", "InChIToSMILES", "GetAliphaticRingsNum", "GetAliphaticRingsNum"], "question": "How many aliphatic rings does the compounds represented by the InChIKey 'UWKQSNNFCGGAFS-XIFFEERXSA-N' the SMILES 'CCC1=C2CN3C(=CC4=C(C3=O)COC(=O)[C@@]4(CC)O)C2=NC5=C1C=C(C=C5)OC(=O)N6CCC(CC6)N7CCCCC7' and the InChI 'InChI=1S/C22H24ClN5O2/c23-15-6-7-20-18(14-15)25-22(30)28(20)16-8-12-26(13-9-16)10-3-11-27-19-5-2-1-4-17(19)24-21(27)29/h1-2,4-7,14,16H,3,8-13H2,(H,24,29)(H,25,30)' contain?"}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetAmideBondsNum", "GetAmideBondsNum", "GetAmideBondsNum", "GetCrippenDescriptors", "GetCrippenDescriptors", "GetCrippenDescriptors"], "question": "Determine the number of amide bonds and the Wildman-Crippen logP value for the molecules represented by the InChIKey 'ROBVIMPUHSLWNV-UHFFFAOYSA-N' the SMILES 'CC(C)NC(=O)C1=CC=CC=C1,' and the InChI 'InChI=1S/C16H20N6O/c1-11-5-8-22(14(23)3-6-17)9-13(11)21(2)16-12-4-7-18-15(12)19-10-20-16/h4,7,10-11,13H,3,5,8-9H2,1-2H3,(H,18,19,20)/t11-,13+/m1/s1'."}
{"tool_path": ["InChIKeyToSMILES", "SMILESToCAS", "SafetySummary", "GetKappa1", "InChIToSMILES", "SMILESToCAS", "SafetySummary", "GetKappa1", "SMILESToCAS", "SafetySummary", "GetKappa1"], "question": "Provide the safety summary and Kappa1 value for the molecules identified by the InChIKey 'SLVMESMUVMCQIY-UHFFFAOYSA-N' the SMILES 'CC1=CC=CC=C1O,' and the InChI ' InChI=1S/C14H19NO2/c1-17-14(16)13(11-7-3-2-4-8-11)12-9-5-6-10-15-12/h2-4,7-8,12-13,15H,5-6,9-10H2,1H3'."}
{"tool_path": ["InChIKeyToSMILES", "GetStereoCodeFromSmiles", "GetStereoCodeFromSmiles"], "question": "What is the stereo code for the molecules that correspond to the InChIKey 'JJCFRYNCJDLXIK-UHFFFAOYSA-N' the SMILES 'C(C(=O)O)(C(=O)O)O,' and the InChI ' InChI=1S/C14H19NO2/c1-17-14(16)13(11-7-3-2-4-8-11)12-9-5-6-10-15-12/h2-4,7-8,12-13,15H,5-6,9-10H2,1H3'."}
{"tool_path": ["NameToSMILES", "InChIKeyToSMILES", "GetFractionCSP3", "GetFractionCSP3", "MolSimilarity"], "question": "Determine the molecular similarity between the molecule with the name 'creatine' the SMILES 'CN1CCC(=C2C3=CC=CC=C3C=CC4=CC=CC=C42)CC1' and also calculate the fraction of sp3-hybridized carbon atoms for each."}
{"tool_path": ["NameToSMILES", "NameToSMILES", "NameToSMILES", "GetCrippenDescriptors", "GetCrippenDescriptors", "GetCrippenDescriptors", "SafetySummary", "SafetySummary", "SafetySummary"], "question": "What are the safety guidelines for the molecules with the names 'glutathione' 'histidine' and 'methionine', and what are their Wildman-Crippen logP values?"}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetKappa2", "GetKappa2"], "question": "Could you determine the Kappa2 values for the molecules that correspond to the InChIKey 'PBJUNZJWGZTSKL-MRXNPFEDSA-N' the SMILES 'C1CC(=O)NC(=O)C1N2CC3=C(C2=O)C=CC=C3N' and the InChI 'InChI=1S/C19H31N/c1-16(15-20-12-6-5-7-13-20)14-17-8-10-18(11-9-17)19(2,3)4/h8-11,16H,5-7,12-15H2,1-4H3 '"}
{"tool_path": ["InChIKeyToSMILES", "GetFractionCSP3", "GetFractionCSP3"], "question": "Could you determine the fraction of sp3-hybridized carbon atoms for the molecules specified by the InChIKey 'YVUQSNJEYSNKRX-UHFFFAOYSA-N' and the SMILES 'C[C@@H]1CCN([C@H](C1)C(=O)O)C(=O)[C@H](CCCN=C(N)N)NS(=O)(=O)C2=CC=CC3=C2NCC(C3)C'."}
{"tool_path": ["NameToSMILES", "NameToSMILES", "InChIKeyToSMILES", "GetAliphaticRingsNum", "GetAliphaticRingsNum", "GetAliphaticRingsNum"], "question": "What are the number of aliphatic rings for the molecules with the names 'caffeine' 'theobromine' and the InChIKey 'YVUQSNJEYSNKRX-UHFFFAOYSA-N'?"}
{"question": "Determine the Kappa1 and Kappa2 values for the molecules represented by the InChIKey XEDHVZKDSYZQBF-UHFFFAOYSA-N the SMILES C[C@H]1CN(CC[C@@]1(C)C2=CC(=CC=C2)O)C[C@H](CC3=CC=CC=C3)C(=O)NCC(=O)O and the InChI 'InChI=1S/C15H22N2O.ClH/c1-11-7-6-8-12(2)14(11)16-15(18)13-9-4-5-10-17(13)3;/h6-8,13H,4-5,9-10H2,1-3H3,(H,16,18);1H'.", "tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetKappa1", "GetKappa1", "GetKappa1", "GetKappa2", "GetKappa2", "GetKappa2"]}
{"tool_path": ["InChIKeyToSMILES", "GetFractionCSP3", "GetFractionCSP3"], "question": "Determine the molecular similarity and calculate the fraction of sp3-hybridized carbon atoms for the molecules represented by the InChIKey 'GELRVIPPMNMYGS-RVXRQPKJSA-N' the SMILES 'C1CCC(CC1)(C2=CC=CS2)N3CCCCC3'.", }
{"tool_path": ["InChIKeyToSMILES", "GetLabuteASA", "GetLabuteASA", "SMILESToCAS", "SMILESToCAS", "SafetySummary", "SafetySummary"], "question": "Provide the safety summary and calculate the Labute ASA for the molecules identified by the InChIKey BSYNRYMUTXBXSQ-UHFFFAOYSA-N and the SMILES CCCC(C)(COC(=O)N)COC(=O)N."}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetAliphaticHeterocyclesNum", "GetCrippenDescriptors", "GetAliphaticHeterocyclesNum", "GetCrippenDescriptors"], "question": "Calculate the number of saturated heterocycles and the Wildman-Crippen logP values for the molecules represented by the InChIKey 'MJJALKDDGIKVBE-UHFFFAOYSA-N' and the InChI 'InChI=1S/C18H28N2O/c1-4-5-12-20-13-7-6-11-16(20)18(21)19-17-14(2)9-8-10-15(17)3/h8-10,16H,4-7,11-13H2,1-3H3,(H,19,21)/t16-/m0/s1'."}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetBCUT", "GetBCUT", "GetBCUT"], "question": "Provide the BCUT descriptors for the molecules with the InChIKey 'WJUKJVOEOFBLCZ-UHFFFAOYSA-N' the SMILES 'C1CCCCC1' and the InChI 'InChI=1S/C21H27NO2/c1-16(21(24)19-7-9-20(23)10-8-19)22-13-11-18(12-14-22)15-17-5-3-2-4-6-17/h2-10,16,18,21,23-24H,11-15H2,1H3'."}
{"tool_path": ["InChIKeyToSMILES", "GetMORSE", "GetKappa2", "GetMORSE", "GetKappa2"], "question": "Calculate the MORSE descriptors and the Kappa2 value for the molecules represented by the InChIKey 'PLRACCBDVIHHLZ-UHFFFAOYSA-N' and the SMILES 'CCCC(=O)N(C1CCN(CC1)CCC2=CC=CC=C2)C3=CC=CC=C3'."}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "GetAmideBondsNum", "GetAmideBondsNum", "GetHallKierAlpha", "GetHallKierAlpha"],"question": "Calculate the number of amide bonds for the molecules represented by the InChIKey 'PUKBOVABABRILL-YZNIXAGQSA-N' and the InChI 'InChI=1S/C18H28N2O.ClH/c1-4-5-12-20-13-7-6-11-16(20)18(21)19-17-14(2)9-8-10-15(17)3;/h8-10,16H,4-7,11-13H2,1-3H3,(H,19,21);1H/t16-;/m0./s1'."}
{"tool_path": ["InChIKeyToSMILES", "InChIToSMILES", "MolSimilarity", "GetFractionCSP3", "GetFractionCSP3"], "question": "Calculate the molecular similarity and fraction of sp3-hybridized carbon atoms for the molecules represented by the InChIKey 'BQDBKDMTIJBJLA-UHFFFAOYSA-N' and the InChI 'InChI=1S/C6H13NO4/c8-2-3-5(10)6(11)4(9)1-7-3/h3-11H,1-2H2'."}
{"tool_path": ["InChIKeyToSMILES", "GetAmideBondsNum", "GetAmideBondsNum", "GetLabuteASA", "GetLabuteASA"], "question": "Calculate the number of amide bonds and the Labute ASA for the molecules represented by the InChIKey 'BSYNRYMUTXBXSQ-UHFFFAOYSA-N' the SMILES 'COC1=CC=CC(=C1OC)[C@@H](C2CCN(CC2)CCC3=CC=C(C=C3)F)O'."}
